name: Build

on: [push, pull_request]

jobs:
  Build:
    strategy:
      matrix:
        include:
          - arch: x86_64-linux
            rust_arch: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - arch: arm64-linux
            rust_arch: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - arch: x86_64-macos
            target: x86_64-apple-darwin
            os: macos-latest
          - arch: arm64-macos
            target: aarch64-apple-darwin
            os: macos-latest
      fail-fast: false

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: rlespinasse/github-slug-action@4.2.3

      - uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.target }}
          override: true

      - uses: Swatinem/rust-cache@v2
        with:
          key: "test"

      - name: Install just
        run: |
          cargo install just

      - name: Install admin UI deps
        run: |
          just yarn

      - name: Build admin UI
        run: |
          just openapi
          just yarn build

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          use-cross: true
          args: --release --target ${{ matrix.target }} -Ztarget-applies-to-host

      - name: Upload artifacts
        uses: actions/upload-artifact@master
        with:
          name: warpgate-${{ env.GITHUB_REF_SLUG }}-${{ matrix.arch }}
          path: target/${{ matrix.target }}/release/warpgate

      - name: Upload release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          draft: true
          generate_release_notes: true
          files: dist/*
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_REPOSITORY: my_gh_org/my_gh_repo
